library("tidyverse")
library("janitor")
mammals <- read_csv("data/mammal_lifehistories_v2.csv") %>% clean_names()
mammals <- read_csv("data/mammal_lifehistories_v2.csv") %>% clean_names() # always add this to make everything consistent
mammals %>%
select(genus, species, gestation)
mammals %>%
select(genus, species, gestation) %>%
mutate(gestation_years=gestation/12)
mammals %>%
select(genus, species, gestation) %>%
mutate(gestation_years=gestation/12) %>%
arrange(-gestation_years)
mammals
mammals %>%
mutate(across(everything(), tolower)) # mutate across all the variables and each of the obeservation into lowercase
mammals %>%
mutate(across(c("order", "family"), tolower))
mammals %>%
mutate(across(c("order", "family"), tolower))# only change order and family to lowercase
mammals %>%
mutate(across(-1, ~ tolower(.))) #apply tolower to all columns except the first
summary(mammals)
mammals %>%
select(genus, species, newborn) %>%
arrange(newborn)
mammals %>%
select(genus, species, newborn) %>%
mutate(newborn_new = ifelse(newborn == -999.00, NA, newborn))%>% # give a new column name--> if newborn == -999, then put NA; if != -999, then keep the number as usual
arrange(-newborn)
mammals
mammals %>%
select(family, genus, species, max_life)
mutate(max_life_new <- ifelse(max_life == "-999.00", NA, max_life)
mammals %>%
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new <- ifelse(max_life == -999.00, NA, max_life))
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new <- ifelse(max_life == -999.00, NA, max_life)) %>%
mutate(max_life_new = max_life_new/12)
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new <- ifelse(max_life == -999.00, NA, max_life)) %>%
mutate(max_life_new = max_life_new/12)
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new <- ifelse(max_life == -999.00, NA, max_life)) %>%
mutate(max_life_new_y = max_life_new/12)
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life == -999.00, NA, max_life)) %>%
mutate(max_life_new_y = max_life_new/12)
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life == -999.00, NA, max_life)) %>%
mutate(max_life_new = max_life_new/12)
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life == -999.00, NA, max_life)) %>%
mutate(max_life_new = max_life_new/12) %>%
arrange(-max_life_new)
msleep
msleep %>%
msleep24 <- select(names, vore, sleep)
msleep24 <- msleep
msleep24 <- msleep %>%
select(name, vore)
msleep %>%
mutate(sleeptotal_24 = sleep_total/24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total)
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3)
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(-sleep_total_24)
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(-sleep_total_24)
msleep24
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(sleep_total_24)
msleep24
summary(msleep24)
hist(msleep24$sleep_total)
msleep <- msleep
library("tidyverse")
library("janitor")
library("tidyverse")
library("janitor")
msleep <- msleep
View(msleep)
large <- msleep %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total) # base R code
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total))
msleep %>%
filter(bodywt<10)%>%
summarize(mean_sleep_sm=mean(sleep_total))
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total),
min_sleep_lg=min(sleep_total),
max_sleep_lg=max(sleep_total),
sd_sleep_lg=sd(sleep_total),
total=n())
msleep %>%
filter(bodywt>200) %>%
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total),
min_sleep_lg=min(sleep_total),
max_sleep_lg=max(sleep_total),
sd_sleep_lg=sd(sleep_total),
total=n())
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total),
min_sleep_lg=min(sleep_total),
max_sleep_lg=max(sleep_total),
sd_sleep_lg=sd(sleep_total),
total=n())
msleep %>%
select(where(is.numeric)) %>%
summarize(across(everything(), mean, na.rm=TRUE))
msleep %>%
filter(bodywt > 100)
msleep %>%
filter(bodywt > 100) %>%
summarize(n_genera=n_distinct(genus))
msleep
msleep %>%
summarize(n_genera = n(genus))
msleep %>%
filter(order = Primates)
msleep %>%
filter(order == "Primates")
msleep %>%
filter(order == "Primates") %>%
summarize(across(everything(), mean, na.rm=TRUE))
msleep %>%
filter(order == "Primates") %>%
summarize(across(bodywt, mean, na.rm=TRUE))
msleep %>%
filter(order == "Primates") %>%
summarize(mean_bodywt=mean(bodywt), min_bodywt=min(bodywt),max_bodywt=max(bodywt),sd_bodywt=sd(bodywt), total=n())
msleep %>%
filter(bodywt > 100) %>%
summarize(n_genera=n_distinct(genus)) # number of unique observations in a categorical variable
msleep %>%
summarize(n_genera = n_distinct(genus))
msleep %>%
summarize(n_genera = n_total(genus))
msleep %>%
summarize(n_genera = n_sum(genus))
msleep %>%
summarize(n_genera = sum(genus))
msleep %>%
summarize(n_genera = n_distinct(genus))
msleep %>%
summarize(mean_sleep_total=mean(sleep_total), min_sleep_total=min(sleep_total), max_sleep_total=max(sleep_total))
msleep %>%
summarize(mean_sleep_total=mean(sleep_total), min_sleep_total=min(sleep_total), max_sleep_total=max(sleep_total), n=n())
unique(bodywt_sm$genus)
bodywt_sm <- msleep %>%
filter(bodywt > 100)
unique(bodywt_sm$genus)
bodywt_sm %>%
distinct(genus) %>%
pull(genus)
msleep %>%
count(vore)
msleep %>%
tabyl(vore)
msleep %>%
count(vore, order)
msleep %>%
count(vore, conservation)
msleep %>%
count(order == Carnivora, conservation)
msleep %>%
count(order == "Carnivora", conservation)
msleep %>%
select(order == Carnivora)
msleep %>%
select(order_C <-  Carnivora)
msleep %>%
select(order_C <-  "Carnivora")
msleep %>%
filter(order =="Carnivora") %>%
count(order == "Carnivora", conservation)
msleep %>%
filter(order =="Carnivora") %>%
count(conservation, sort = T)
msleep %>%
filter(vore=="herbi")
msleep %>%
filter(vore=="herbi") %>%
count(vore, order)
msleep %>%
filter(vore=="herbi") %>%
count(vore, order, sort = T)
msleep %>%
filter(order =="Carnivora") %>%
count(conservation, sort = T) # sorts descending order by count
msleep %>%
filter(vore=="herbi") %>%
count(order, sort = T)
msleep %>%
count(conservation, genus)
msleep %>%
tabyl(conservation, genus)
library("tidyverse")
library("janitor")
library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-")) %>% clean_names()
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-")) %>% clean_names()
superhero_info %>%
count(bad_superhero=="bad")
superhero_info %>%
count(bad_superhero==n("bad"))
superhero_info %>%
count(alignment)
superhero_info %>%
tabyl(alignment)
superhero_info %>%
filter(alignment=="bad")
superhero_info %>%
select(name, alignment)
superhero_info %>%
select(name, alignment) %>%
filter(alignment=="bad")
superhero_info %>%
filter(alignment=="bad")
superhero_info %>%
filter(alignment=="bad") %>%
count(name, sort=T)
superhero_info %>%
summarize(n_races=n_distinct(races))
superhero_info %>%
summarize(n_races=n_distinct(races))
superhero_info %>%
summarize(n_races=n_distinct(race))
superhero_info %>%
filter(alignment=="good")
superhero_info %>%
filter(alignment=="good") %>%
summarize(names)
superhero_info %>%
filter(alignment=="good") %>%
summarize(list(names))
good_superhero <- superhero_info %>%
filter(alignment=="good")
good_superhero
superhero_info %>%
filter(alignment=="bad")
good_superhero <- superhero_info %>%
filter(alignment=="good")
bad_superhero <- superhero_info %>%
filter(alignment=="bad")
good_superhero
good_superhero <- superhero_info %>%
filter(alignment=="good")
bad_superhero <- superhero_info %>%
filter(alignment=="bad")
good_superhero
bad_superhero
bad_superhero <- superhero_info %>%
filter(alignment=="bad")
bad_superhero
good_superhero <- superhero_info %>%
filter(alignment=="good")
good_superhero
superhero_info %>%
filter(alignment == "good" & race == "Vampires")
View(superhero_info)
View(superhero_info)
superhero_info %>%
filter(alignment == "good")
superhero_info %>%
filter(alignment == "good") %>%
filter(race == "Vampires")
superhero_info %>%
filter(alignment == "good" & race == "Vampire")
library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-")) %>% clean_names()
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-")) %>% clean_names()
superhero_info %>%
count(alignment)
superhero_info %>%
tabyl(alignment)
superhero_info %>%
select(name, alignment) %>%
filter(alignment=="bad")
superhero_info %>%
filter(alignment=="bad") %>%
count(name, sort=T)
superhero_info %>%
summarize(n_races=n_distinct(race))
good_superhero <- superhero_info %>%
filter(alignment=="good")
good_superhero
bad_superhero <- superhero_info %>%
filter(alignment=="bad")
bad_superhero
superhero_info %>%
filter(alignment == "good" & race == "Vampire")
superhero_info %>%
mutate(height_m=height/100)
superhero_info %>%
mutate(height_m=ifelse(height/100))
mammals %>%
select(family, genus, species, max_life) %>%
#pull out variables of interest
mutate(max_life_new = ifelse(max_life == -999.00, NA, max_life)) %>%
# replaces the -999 with NA (only put -999 might work, but it's better to be specific)
mutate(max_life_new = max_life_new/12) %>%
# converted to years
arrange(-max_life_new)
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(sleep_total_24)
msleep24
superhero_info %>%
mutate(height=height/100)
superhero_info %>%
mutate(height=height/100) %>%
filter(alignment == "Good")
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total)) # output is a new data frame
superhero_info %>%
filter(alignment == "Good")
superhero_info %>%
filter(alignment = "Good")
superhero_info %>%
filter(alignment == "Good")
superhero_info %>%
filter(alignment == "good")
superhero_info %>%
mutate(height=height/100) %>%
filter(alignment == "good")
superhero_info %>%
mutate(height=height/100) %>%
filter(alignment == "good") %>%
arrange(height)
superhero_info %>%
mutate(height=height/100) %>%
filter(alignment == "good") %>%
arrange(-height)
superhero_info %>%
mutate(height=height/10)
superhero_info %>%
mutate(height=height/10) %>%
filter(alignment=="bad")
superhero_info %>%
mutate(height=height/10) %>%
filter(alignment=="bad") %>%
arrange(-height)
superhero_powers
msleep %>%
filter(order == "Primates") %>%
summarize(mean_bodywt=mean(bodywt), min_bodywt=min(bodywt),max_bodywt=max(bodywt),sd_bodywt=sd(bodywt), total=n())
msleep %>%
filter(bodywt > 100) %>%
summarize(n_genera=n_distinct(genus)) # number of unique observations in a categorical variable
superhero_powers %>%
filter(agility == "TRUE" & stealth== "TRUE" & super_strength=="TRUE" & stamina=="TRUE")
superhero_powers %>%
select(agility, stealth, super_strength, stamina) %>%
filter(agility == "TRUE" & stealth== "TRUE" & super_strength=="TRUE" & stamina=="TRUE")
superhero_powers %>%
select(name, agility, stealth, super_strength, stamina) %>%
filter(agility == "TRUE" & stealth== "TRUE" & super_strength=="TRUE" & stamina=="TRUE")
superhero_powers %>%
select(name, agility, stealth, super_strength, stamina)
superhero_powers %>%
filter(agility == "TRUE" & stealth== "TRUE" & super_strength=="TRUE" & stamina=="TRUE")
superhero_powers %>%
filter(agility == "TRUE" & stealth== "TRUE" & super_strength=="TRUE" & stamina=="TRUE") %>%
summerize(n_names=n_distinct(hero_names))
superhero_powers %>%
filter(agility == "TRUE" & stealth== "TRUE" & super_strength=="TRUE" & stamina=="TRUE") %>%
summarize(n_names=n_distinct(hero_names))
clean_names(superhero_powers)
superhero_powers %>%
filter(agility == "TRUE" & stealth== "TRUE" & super_strength=="TRUE" & stamina=="TRUE") %>%
summarize(n_names=n_distinct(hero_names))
superhero_powers %>% # from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) %>%
mutate(total_powers = rowSums(across(-1))) %>%
select(hero_names, total_powers) %>%
arrange(-total_powers)
mutate(total_powers = rowSums(across(-1)))
superhero_powers %>% # read from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) %>% # across the entire data frame, apply the following condition to every cell in all columns except the first column: if the data in the cell is "TRUE", convert it into "1", if the data is not "TRUE", convert it into "0"
mutate(total_powers = rowSums(across(-1))) #%>% #convert
superhero_powers %>% # read from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) %>% # across the entire data frame, apply the following condition to every cell in all columns except the first column: if the data in the cell is "TRUE", convert it into "1", if the data is not "TRUE", convert it into "0"
#mutate(total_powers = rowSums(across(-1))) #%>% #convert
#select(hero_names, total_powers) %>%
#arrange(-total_powers)
```
superhero_powers %>% # read from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) #%>% # across the entire data frame, apply the following condition to every cell in all columns except the first column: if the data in the cell is "TRUE", convert it into "1", if the data is not "TRUE", convert it into "0"
superhero_powers %>% # read from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) %>% # across the entire data frame, apply the following condition to every cell in all columns except the first column: if the data in the cell is "TRUE", convert it into "1", if the data is not "TRUE", convert it into "0"
mutate(total_powers = rowSums(across(-1))) #%>% #convert
superhero_powers %>% # read from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) %>%
# across the entire data frame, apply the following condition to every cell in all columns except the first column: if the data in the cell is "TRUE", convert it into "1", if the data is not "TRUE", convert it into "0"
mutate(total_powers = rowSums(across(-1))) %>%
# add the sum of numbers for each row (except the first column) and name the new column "total_powers"
select(hero_names, total_powers) %>%
#arrange(-total_powers)
```
superhero_powers %>% # read from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) %>%
# across the entire data frame, apply the following condition to every cell in all columns except the first column: if the data in the cell is "TRUE", convert it into "1", if the data is not "TRUE", convert it into "0"
mutate(total_powers = rowSums(across(-1))) %>%
# add the sum of numbers for each row (except the first column) and name the new column "total_powers"
select(hero_names, total_powers) #%>%
superhero_powers %>% # read from the data
mutate(across(-1, ~ ifelse(. == TRUE, 1, 0))) %>%
# across the entire data frame, apply the following condition to every cell in all columns except the first column: if the data in the cell is "TRUE", convert it into "1", if the data is not "TRUE", convert it into "0"
mutate(total_powers = rowSums(across(-1))) %>%
# add the sum of numbers for each row (except the first column) and name the new column "total_powers"
select(hero_names, total_powers) %>%
# only show data of the 2 columns "hero_names" and "total_powers"
arrange(-total_powers)
superhero_powers %>%
filter(hero_names == "Winter Soilder")
superhero_powers %>%
filter(hero_names == "Winter Soldier")
superhero_info %>%
filter(hero_names == "Winter Soldier")
superhero_info %>%
filter(name == "Winter Soldier")
superhero_info %>%
tabyl(alignment)
superhero_info%>%
filter(alignment=="bad") %>%
select(name)
superhero_info %>%
filter(alignment=="bad") %>%
select(name)
superhero_info%>%
summarize(races <- n_distinct(race))
superhero_powers%>%
filter(agility=="TRUE", stealth=="TRUE", super_strength=="TRUE", stamina=="TRUE") %>%
summarize(total=n())
filter(superhero_powers, hero_names=="Catwoman")
filter(superhero_info,name=="Catwoman")
