ui <- fluidPage(titlePanel("Total Sleep Time"),
selectInput("x",
"Select X Variable",
choices = unique(msleep$vore),
selected = "carni"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(data=msleep,
aes_string(x=sleep_total))+
geom_density(alpha=0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Total Sleep Time"),
selectInput("x",
"Select X Variable",
choices = unique(msleep$vore),
selected = "carni"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
msleep %>%
filter(vore==input$x) %>%
ggplot(aes(x=sleep_total))+
geom_density(alpha=0.6)
})
}
shinyApp(ui, server)
msleep %>%
ggplot(aes(x=sleep_total))+
geom_density(alpha=0.6)
library(shiny)
ui <- fluidPage(titlePanel("Total Sleep Time"),
selectInput("x",
"Select X Variable",
choices = unique(msleep$vore),
selected = "carni"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
msleep %>%
ggplot(aes(x=sleep_total))+
geom_density(alpha=0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Total Sleep Time"),
selectInput("x",
"Select X Variable",
choices = unique(msleep$vore),
selected = "carni"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
msleep %>%
filter(vore==input$x) %>%
ggplot(aes(x=sleep_total))+
geom_density(alpha=0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Total Sleep Time"),
selectInput("x",
"Select X Variable",
choices = unique(msleep$vore),
selected = "carni"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
msleep %>%
filter(vore==input$x) %>%
ggplot(aes(x=sleep_total))+
geom_density(fill="steelblue", color="black", alpha=0.6)+
labs(title = "Total Sleep Time of Each Vore",
x="Total Sleep Time",
y=NULL)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x",
"Select Taxon",
choices = unique(homerange$taxon),
selected = "birds"),
plotOutput("plot", width="500px", height="400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color="black", alpha-0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x",
"Select Taxon",
choices = unique(homerange$taxon),
selected = "birds"),
plotOutput("plot", width="500px", height="400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color="black", alpha=0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Total Sleep Time"),
selectInput("x",
"Select X Variable",
choices = unique(msleep$vore),
selected = "carni"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
msleep %>%
filter(vore==input$x) %>%
ggplot(aes(x=sleep_total))+
geom_density(fill="steelblue", color="black", alpha=0.6)+
labs(title = "Total Sleep Time of Each Vore",
x="Total Sleep Time",
y=NULL)
})
}
shinyApp(ui, server)
library("tidyverse")
datasets::USPersonalExpenditure
?USPersonalExpenditure
expenditures <- USPersonalExpenditure %>%
as_tibble() %>% #this transforms the matrix into a data frame
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
expenditures %>%
pivot_longer(-expenditure # not moving
, names_to = "year",
values_to = "bn_dollars")
beachbugs <- read_csv("data/beachbugs_long.csv")
beachbugs
beachbugs_wide <- beachbugs %>%
pivot_wider(names_from = "site",
values_from = "buglevels")
beachbugs_wide %>%
pivot_longer(-year,
names_to = "site",
values_to = "bugslevels")
beachbugs_wide <- beachbugs %>%
pivot_wider(names_from = "site",
values_from = "buglevels")
beachbugs_wide
gene_exp <- read_csv("data/gene_exp.csv")
gene_exp
gene_exp %>%
pivot_wider(names_from = "type",
values_from = "L4_values")
library("tidyverse")
library("janitor")
heart <- read_csv("data/Heart_disease_statlog.csv")
glimpse(heart)
heart <- heart %>%
clean_names() %>%
rename(gender = sex) %>%
mutate(
gender = ifelse(gender == 1, "male", "female"),
slope = case_when(
slope == 0 ~ "upsloping",
slope == 1 ~ "flat",
slope == 2 ~ "downsloping"
),
cp = case_when(
cp == 0 ~ "typical_angina",
cp == 1 ~ "atypical_angina",
cp == 2 ~ "non_anginal_pain",
cp == 3 ~ "asymptomatic"
),
fbs = ifelse(fbs == 0, "false", "true"),
restecg = case_when(
restecg == 0 ~ "normal",
restecg == 1 ~ "t_wave_abnormality",
restecg == 2 ~ "left_ventricular_hypertrophy"
),
exang = ifelse(exang == 0, "no", "yes"),
thal = case_when(
thal == 0 ~ "unknown",
thal == 1 ~ "normal",
thal == 2 ~ "fixed_defect",
thal == 3 ~ "reversable_defect"
),
target = ifelse(target == 0, "no_disease", "disease")
)
write.csv(heart, "data/heart.csv", row.names = FALSE)
library("tidyverse")
library("janitor")
library("ggthemes")
library("RColorBrewer")
library("paletteer")
heart <- read_csv("data/heart.csv")
glimpse(heart)
summary(heart)
heart %>%
group_by(gender) %>%
summary(n_gender=sum(gender))
heart %>%
group_by(gender) %>%
summarize(n_gender=sum(gender))
heart %>%
group_by(gender)
heart %>%
summarize(unique(gender))
heart %>%
group_by(gender) %>%
summarize(n_gen=sum(gender))
heart %>%
mutate(as.factor(gender)) %>%
group_by(gender) %>%
summarize(n_gen=sum(gender))
heart %>%
mutate(as.factor(gender))
heart %>%
count(gender)
heart %>%
group_by(gender)
heart %>%
group_by(gender) %>%
summarize(ave_age=mean(age))
heart %>%
count(gender) %>%
arrange(-n)
heart %>%
group_by(gender)
heart %>%
group_by(gender) %>%
count(target)
heart %>%
group_by(gender) %>%
count(target) %>%
arrange(-n)
heart %>%
group_by(gender)
heart %>%
group_by(gender) %>%
count(target)
View(heart)
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100)
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
arrange(-n_pct)
heart %>%
ggplot(aes(x=gender, y=target))+
geom_bar()
heart %>%
ggplot(aes(x=gender, y=target))+
geom_col()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=gender, y=n_pct))+
geom_col()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=gender, y=n_pct, fill = gender))+
geom_col()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct, fill = gender))+
geom_bar()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct, y=gender, fill = gender))+
geom_bar()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct, y=gender, fill = gender))+
geom_col()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=target, y=gender, fill = gender))+
geom_col()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=gender, y=target, fill = gender))+
geom_col()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=target, fill = gender))+
geom_bar()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=gender, y=n_pct, fill = gender))+
geom_col()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=gender, y=n_pct, fill = gender))+
geom_col(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=gender, y=n_pct))+
geom_col(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct))+
geom_bar(position = "dodge")
homerange %>% count(taxon, sort=T)
library(tidyverse)
library(janitor)
library(palmerpenguins)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <-
read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>% count(taxon, sort=T)
homerange %>%
ggplot(aes(x=taxon, fill=taxon))+
geom_bar()+
coord_flip()+
labs(title="Observation by Taxon",
x="Taxonomic Group",
y="n")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct, fill=gender))+
geom_bar(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=target, fill=gender))+
geom_bar(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=target, fill=gender))+
geom_col(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=target, y=gender, fill=gender))+
geom_col(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=target, fill=gender))+
geom_bar(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct, fill=gender))+
geom_bar(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct, y=gender, fill=gender))+
geom_bar(position = "dodge")
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=n_pct, y=gender, fill=gender))+
geom_col(position = "dodge")
heart %>%
ggplot(aes(x=gender, y=target, fill=gender))+
geom_col()
heart %>%
ggplot(aes(x=target, fill=gender))+
geom_bar()
heart %>%
ggplot(aes(x=target/270*100, fill=gender))+
geom_bar()
heart %>%
ggplot(aes(x=target, fill=gender))+
geom_bar()
heart %>%
group_by(gender) %>%
ggplot(aes(x=target, fill=gender))+
geom_bar()
heart %>%
group_by(gender) %>%
count(target) %>%
mutate(n_pct=n/270*100) %>%
ggplot(aes(x=target, fill=gender))+
geom_bar()
heart %>%
ggplot(aes(x=target, fill=gender))+
geom_bar()
heart %>%
ggplot(aes(x=target, fill=gender))+
geom_bar()+
labs(title = "Gender vs. Heart Disease",
x="Heart Disease",
y=NULL)
heart %>%
ggplot(aes(x=age, y=chol))+
geom_line()
heart %>%
ggplot(aes(x=age, y=chol))+
geom_point()
heart %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)
heart %>%
filter(gender=="male") %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)
heart %>%
filter(gender=="female") %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)
heart %>%
filter(gender=="male") %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)+
labs(title = "Male Age vs. Cholesterol Levels",
x="Age",
y="Cholesterol Levels")
heart %>%
filter(gender=="male") %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)+
labs(title = "Male Age vs. Cholesterol Levels",
x="Age",
y="Cholesterol Levels",
alpha=0.6)
heart %>%
filter(gender=="female") %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)+
labs(title = "Female Age vs. Cholesterol Levels",
x="Age",
y="Cholesterol Levels",
alpha=0.6)
heart %>%
filter(gender=="female") %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)+
labs(title = "Female Age vs. Cholesterol Levels",
x="Age",
y="Cholesterol Levels",
alpha=0.6)+
theme(plot.title = element_text(size=rel(1.5), hjust=0.5))
heart %>%
filter(gender=="male") %>%
ggplot(aes(x=age, y=chol))+
geom_point()+
geom_smooth(method = lm, se=F)+
labs(title = "Male Age vs. Cholesterol Levels",
x="Age",
y="Cholesterol Levels",
alpha=0.6)+
theme(plot.title = element_text(size=rel(1.5), hjust=0.5))
