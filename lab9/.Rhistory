library("tidyverse")
datasets::USPersonalExpenditure
?USPersonalExpenditure
expenditures <- USPersonalExpenditure %>%
as_tibble() %>% #this transforms the matrix into a data frame
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
expenditures %>%
pivot_longer(names_to = "year")
expenditures %>%
pivot_longer(-expenditure, names_to = "year")
expenditures %>%
pivot_longer(-expenditure, names_to = "year", values_to = "bn_dollars")
expenditures %>%
filter(expenditure=="Medical and Health")
expenditures %>%
filter(expenditure=="Medical and Health") %>%
pivot_longer(-expenditure, names_to = "year", values_to = "bn_dollars")
expenditures %>%
filter(expenditure=="Medical and Health") %>%
pivot_longer(-expenditure, names_to = "year", values_to = "bn_dollars") %>%
arrange(-bn_dollars)
expenditures %>%
pivot_longer(-expenditure, names_to = "year", values_to = "bn_dollars") %>%
filter(expenditure=="Medical and Health") %>%
arrange(-bn_dollars)
expenditures %>%
pivot_longer(-expenditure, names_to = "year", values_to = "bn_dollars") %>%
filter(expenditure=="Medical and Health") %>%
arrange(bn_dollars)
heartrate2 <- read_csv("data/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") # separate = which column you want to split
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>% # separate = which column you want to split
# split patient into 2 columns patient and sex.
pivot_longer(-patient, -sex,
names_to = "treatment",
values_to = "heart_rate")
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>% # separate = which column you want to split
# split patient into 2 columns patient and sex.
pivot_longer(-patient & -sex,
names_to = "treatment",
values_to = "heart_rate")
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1)
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>%
mutate(patient=str_remove(patient, "_"))
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>% # remove the last character of patient string
mutate(patient=str_remove(patient, "_")) %>% # strngr is important when deal with strings --> remove the _ from patient
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "treatment",
values_to = "heart_rate")
heartrate2 %>%
separate(patient, into = c("patient", "sex"))
heartrate2 %>%
separate(patient, into = c("patient", "sex")) %>%
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "treatment",
values_to = "heart_rate")
heartrate2 %>%
separate(patient, into = c("patient", "sex")) %>%
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "treatment",
values_to = "heart_rate") %>%
arrange(patient, drug)
heartrate2 %>%
separate(patient, into = c("patient", "sex")) %>%
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "drug",
values_to = "heart_rate") %>%
arrange(patient, drug)
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>% # remove the last character of patient string
mutate(patient=str_remove(patient, "_")) %>% # strngr is important when deal with strings --> remove the _ from patient
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "drug",
values_to = "heart_rate")
heartrate3 <- heartrate2 %>%
separate(patient, into = c("patient", "sex")) %>%
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "drug",
values_to = "heart_rate") %>%
arrange(patient, drug)
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>% # remove the last character of patient string
mutate(patient=str_remove(patient, "_")) %>% # strngr is important when deal with strings --> remove the _ from patient
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "drug",
values_to = "heart_rate")
heartrate3 <- heartrate2 %>%
separate(patient, into = c("patient", "sex")) %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heart_rate") %>%
arrange(patient, drug)
heartrate2 %>%
separate(patient, into = c("patient", "sex")) %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heart_rate") %>%
arrange(patient, drug)
heartrate3 <- heartrate2 %>%
separate(patient, into = c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heart_rate") %>%
arrange(patient, drug)
heartrate3 %>%
unite(patient_sex, "patient", "sex", sep="_")
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = -1) %>% # remove the last character of patient string
mutate(patient=str_remove(patient, "_")) %>% # strngr is important when deal with strings --> remove the _ from patient
pivot_longer(-patient & -sex, #or -c(patient, sex)
names_to = "drug",
values_to = "heart_rate")
View(heartrate3)
tb_data <- read_csv("data/tb_data.csv")
tb_data
tb_data %>%
pivot_wider(names_from = "key", #the observations under key will become new columns
values_from = "value") #the values under value will be moved to the new columns
gene_exp
gene_exp <- read_csv("data/gene_exp.csv")
gene_exp
gene_exp %>%
pivot_wider(names_from = "type",
values_from = "L4_values")
beachbugs
beachbugs
beachbugs <- read_csv("data/beachbug_long.csv")
beachbugs <- read_csv("data/beachbugs_long.csv")
beachbugs
beachbugs %>%
pivot_wider(names_from = "site",
values_from = "buglevels")
beachbugs_wide <- beachbugs %>%
pivot_wider(names_from = "site",
values_from = "buglevels")
beachbugs_wide %>%
pivot_longer(-year,
names_to = "site",
values_to = "bugslevels")
ecosphere <- read_csv("data/ecs21351-sup-0003-SupplementS1.csv", skip=2) %>%
#load the data and skip the first two rows
clean_names() %>%
#clean the variable names
slice(1:(n() - 18))
library(tidyverse)
library(janitor)
options(scipen=999)
ecosphere <- read_csv("data/ecs21351-sup-0003-SupplementS1.csv", skip=2) %>%
#load the data and skip the first two rows
clean_names() %>%
#clean the variable names
slice(1:(n() - 18))
#remove the footer
ecosphere %>%
filter(migratory_strategy=="Irruptive") %>%
group_by(habitat, diet) %>%
summarize(mean_population_size = round(mean(population_size, na.rm=T), 1), .groups='keep')
ecosphere %>%
mutate(mass_g=10^log10_mass) %>%
filter(diet=="Vertebrates", life_expectancy=="Long", urban_affiliate=="No", migratory_strategy=="Long") %>%
select(scientific_name, common_name, mass_g)
ecosphere <- ecosphere %>%
mutate(conservation_status = ifelse(population_size<300000, "threatened", "stable"))
ecosphere %>% count(conservation_status, sort=T)
ecosphere %>%
mutate(conservation_status=ifelse(population_size<300000,"threatened", "NA")) %>%
mutate(conservation_status=ifelse(population_size>300000,"stable", conservation_status)) %>%
filter(population_size==300000 | is.na(population_size))
ecosphere %>%
mutate(conservation_status=ifelse(population_size<300000,"threatened", "NA")) %>%
mutate(conservation_status=ifelse(population_size>300000,"stable", conservation_status)) %>%
arrange(-population_size)
ecosphere %>%
mutate(conservation_status=ifelse(population_size<300000,"threatened", "NA")) %>%
mutate(conservation_status=ifelse(population_size>300000,"stable", conservation_status)) %>%
arrange(-population_size) %>%
group_by(conservation_status) %>%
summarize(n_speices=n_distinct(scientific_name))
ecosphere %>%
mutate(conservation_status=ifelse(population_size<300000,"threatened", "NA")) %>%
mutate(conservation_status=ifelse(population_size>300000,"stable", conservation_status)) %>%
filter(population_size==300000 | is.na(population_size))
library(tidyverse)
library(naniar)
library(janitor)
names(iris)
glimpse(iris)
ggplot(data=iris, #data
mapping = aes(x=Species, y=Petal.Length)) # map the aesthetics
ggplot(data=iris, #data
mapping = aes(x=Species, y=Petal.Length)) # map the aesthetics
ggplot(data=iris, #data
mapping = aes(x=Species, y=Petal.Length)) +
geom_boxplot()
ggplot(data=iris,
mapping = aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot(data=iris,
mapping = aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point()
names(iris)
ggplot(data=iris, #data
mapping = aes(x=Species, y=Petal.Length)) +
geom_point()
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
summary(homerange)
glimpse(homerange)
summary(homerange)
naniar::miss_var_summary(homerange)
names(homerange)
ggplot(data=homerange,
mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()
ggplot(data=homerange,
mapping=aes(x=log10.mass, y=log10.hra))+
geom_jitter() # adds some random noise to prevent overplotting/ spread things out
ggplot(data=homerange,
mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()+
geom_smooth
ggplot(data=homerange,
mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()+
geom_smooth()
ggplot(data=homerange,
mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()+
geom_smooth(method=lm, se=T)
ggplot(data=homerange,
mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()+
geom_smooth(method=lm, se=F) # lm=linear model, se=standard error
ggplot(data=homerange,
mapping = aes(x=log10.hra, y= log10.preymass))+
geom_jitter()
ggplot(data=homerange,
mapping = aes(x=log10.hra, y= log10.preymass))+
geom_point()
ggplot(data=homerange,
mapping = aes(x=log10.hra, y= log10.preymass))+
geom_point()+
geom_smooth(method=lm, se=F)
ggplot(data=homerange,
mapping = aes(x=log10.hra, y= log10.preymass))+
geom_point()+
geom_smooth(method=lm, se=F, na.rm=T)
ggplot(data=homerange,
mapping = aes(x=log10.hra, y= log10.preymass))+
geom_point()+
geom_smooth(method=lm, se=F, na.rm=T)
ggplot(data=homerange,
mapping = aes(x=log10.hra, y= log10.preymass))+
geom_point(na.rm=T)+
geom_smooth(method=lm, se=F, na.rm=T)
names(homerange)
names(homerange)
homerange %>%
count(trophic.guild)
homerange %>%
ggplot(aes(x=trophic.guild))+
geom_bar()
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv") %>% clean_names()
glimpse(homerange)
naniar::miss_var_summary(homerange)
names(homerange)
ggplot(data=homerange,
mapping=aes(x=log10.mass, y=log10.hra))+
geom_point()
ggplot(data=homerange,
mapping=aes(x=log10_mass, y=log10_hra))+
geom_point()
ggplot(data=homerange,
mapping=aes(x=log10_mass, y=log10_hra))+
geom_jitter() # adds some random noise to prevent overplotting/ spread things out
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass)
ggplot(data=homerange,
mapping=aes(x=log10_mass, y=log10_hra))+
geom_point()+
geom_smooth(method=lm, se=F) # specify a lm and wheather or not there is se.      # lm=linear model, se=standard error
#difference between jitter and point: jitter: adds random noiss, makes visual better
ggplot(data=homerange,
mapping = aes(x=log10_hra, y= log10_preymass))+
geom_point(na.rm=T)+
geom_smooth(method=lm, se=F, na.rm=T)
names(homerange)
names(homerange)
homerange %>%
count(trophic_guild)
homerange %>%
ggplot(aes(x=trophic_guild))+
geom_bar()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y = log10_mass))+
geom_col()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y = log10_mass))+
geom_col() +
coord_flip()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y = log10_mass))+
geom_col() +
#coord_flip()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y = log10_mass))+
geom_col()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y = log10_mass))+
geom_bar()
homerange %>%
filter(family=="salmonidae") %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y = log10_mass))+
geom_bar(stat="identity")
names(homerange)
homerange %>%
filter(class=="mammalia")
homerange %>%
filter(taxon=="mammals")
homerange %>%
filter(taxon=="mammals") %>%
group_by(trophic_guild)
homerange %>%
filter(taxon=="mammals") %>%
group_by(trophic_guild) %>%
summarize(n_guild=n_distinct(trophic_guild))
#ggplot(aes(x=trophic_guild))
homerange %>%
filter(taxon=="mammals") %>%
summarize(n_guild=n_distinct(trophic_guild))
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=trophic_guild))
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=trophic_guild))+
geom_bar()
homerange %>%
filter(taxon=="mammals")
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=mean_mass_g))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
arrange(mean_mass_g)
#ggplot(aes(x=mean_mass_g))+
#geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
count(trophic_guild)
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=trophic_guild))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
arrange(mean_mass_g)
ggplot(aes(x=mean_mass_g))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
arrange(mean_mass_g) %>%
ggplot(aes(x=mean_mass_g))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
count(trophic_guild) %>%
ggplot(aes(x=trophic_guild))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
count(trophic_guild) %>%
ggplot(aes(x=trophic_guild, y=n))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
count(trophic_guild) %>%
ggplot(aes(x=trophic_guild, y=n))+
geom_col()
homerange %>%
filter(taxon=="mammals") %>%
top_n(-10, log10_mass) %>%
arrange(mean_mass_g) %>%
ggplot(aes(x=mean_mass_g))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
top_n(-10, log10_mass) %>%
arrange(mean_mass_g) %>%
ggplot(aes(x=mean_mass_g, y=n))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
top_n(-10, log10_mass) %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=mean_mass_g, y=n))+
geom_bar()
homerange %>%
filter(taxon=="mammals") %>%
top_n(-10, log10_mass) %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name y=log10_mass))+
homerange %>%
filter(taxon=="mammals") %>%
top_n(-10, log10_mass) %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name y=log10_mass))+
homerange %>%
filter(taxon=="mammals") %>%
top_n(-10, log10_mass) %>%
select(common_name, log10_mass) %>%
ggplot(aes(x=common_name, y=log10_mass))+
geom_col() +
coord_flip()
